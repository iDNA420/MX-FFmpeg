name: build custom codecs

on:
  workflow_dispatch:
    inputs:
      store_artifact:
        description: "Store Artifacts"
        type: boolean
        default: false
  push:
    tags:
      - "v*.*.*"

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: checkout tools repo
        uses: actions/checkout@v4
      - name: checkout MXPlayer repo
        uses: actions/checkout@v4
        with:
          repository: MXVideoPlayer/MX-FFmpeg
          path: src
      - name: install build tools
        run: sudo apt update && sudo apt install -y nasm meson ninja-build
      - name: setting up NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
      - name: build arm64 codec
        run: ./build.sh --arm64
        shell: bash
      - name: save artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: artifact-arm64
          path: |
            output/*.zip
            !output/aio*.zip
          if-no-files-found: error
  build-neon:
    runs-on: ubuntu-latest
    steps:
      - name: checkout tools repo
        uses: actions/checkout@v4
      - name: checkout MXPlayer repo
        uses: actions/checkout@v4
        with:
          repository: MXVideoPlayer/MX-FFmpeg
          path: src
      - name: install build tools
        run: sudo apt update && sudo apt install -y nasm meson ninja-build
      - name: setting up NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
      - name: build neon codec
        run: ./build.sh --neon
        shell: bash
      - name: save artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: artifact-neon
          path: |
            output/*.zip
            !output/aio*.zip
          if-no-files-found: error
  build-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: checkout tools repo
        uses: actions/checkout@v4
      - name: checkout MXPlayer repo
        uses: actions/checkout@v4
        with:
          repository: MXVideoPlayer/MX-FFmpeg
          path: src
      - name: install build tools
        run: sudo apt update && sudo apt install -y nasm meson ninja-build
      - name: setting up NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
      - name: build x86_64 codec
        run: ./build.sh --x86_64
        shell: bash
      - name: save artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: artifact-x86_64
          path: |
            output/*.zip
            !output/aio*.zip
          if-no-files-found: error
  build-x86:
    runs-on: ubuntu-latest
    steps:
      - name: checkout tools repo
        uses: actions/checkout@v4
      - name: checkout MXPlayer repo
        uses: actions/checkout@v4
        with:
          repository: MXVideoPlayer/MX-FFmpeg
          path: src
      - name: install build tools
        run: sudo apt update && sudo apt install -y nasm meson ninja-build
      - name: setting up NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
      - name: build x86 codec
        run: ./build.sh --x86
        shell: bash
      - name: save artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: artifact-x86
          path: |
            output/*.zip
            !output/aio*.zip
          if-no-files-found: error
  publishing:
    runs-on: ubuntu-latest
    needs: [build-arm64, build-neon, build-x86_64, build-x86]
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: artifact-*
          merge-multiple: true
      - name: list all artifacts
        run: ls -R artifacts
      - name: merge artifacts
        if: success()
        run: |
          mkdir temp
          unzip -q 'artifacts/*.zip' -d temp/
          zip -j artifacts/aio-${{ github.ref_name }}.zip temp/*
      - name: publish artifacts
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref_type == 'tag' }}
        with:
          files: artifacts/*.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
